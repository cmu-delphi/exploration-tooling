% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/batchtools_tools.R
\name{add_forecast_problem}
\alias{add_forecast_problem}
\title{add a new dataset to the registry}
\usage{
add_forecast_problem(problem_name, archive, outcome, extra_sources, ...)
}
\arguments{
\item{problem_name}{what you want to name the problem}

\item{archive}{the actual data, its expected to be in an Epiprocess archive}

\item{outcome}{the target variable}

\item{extra_sources}{any potential side information the model has available
in the archive}

\item{...}{
  Arguments passed on to \code{\link[batchtools:addProblem]{batchtools::addProblem}}
  \describe{
    \item{\code{fun}}{[\code{function}]\cr
The function defining the stochastic problem part.
The static part is passed to this function with name \dQuote{data} and the \code{\link[batchtools]{Job}}/\code{\link[batchtools]{Experiment}}
is passed as \dQuote{job}.
Therefore, your function must have the formal arguments \dQuote{job} and \dQuote{data} (or dots \code{...}).
If you do not provide a function, it defaults to a function which just returns the data part.}
    \item{\code{seed}}{[\code{integer(1)}]\cr
Start seed for this problem. This allows the \dQuote{synchronization} of a stochastic
problem across algorithms, so that different algorithms are evaluated on the same stochastic instance.
If the problem seed is defined, the seeding mechanism works as follows:
(1) Before the dynamic part of a problem is instantiated,
the seed of the problem + [replication number] - 1 is set, i.e. the first
replication uses the problem seed. (2) The stochastic part of the problem is
instantiated. (3) From now on the usual experiment seed of the registry is used,
see \code{\link[batchtools]{ExperimentRegistry}}.
If \code{seed} is set to \code{NULL} (default), the job seed is used to instantiate the problem and
different algorithms see different stochastic instances of the same problem.}
    \item{\code{cache}}{[\code{logical(1)}]\cr
If \code{TRUE} and \code{seed} is set, problem instances will be cached on the file system.
This assumes that each problem instance is deterministic for each combination of hyperparameter setting
and each replication number.
This feature is experimental.}
    \item{\code{reg}}{[\code{\link[batchtools]{ExperimentRegistry}}]\cr
Registry. If not explicitly passed, uses the last created registry.}
  }}
}
\description{
in the context of forecaster exploration, we can be a bit more specific about
the problem than a generic batchtools Problem. In addition to the data, the
problem also specifies the outcome and available extra sources.
}
